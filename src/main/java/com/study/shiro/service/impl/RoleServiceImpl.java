package com.study.shiro.service.impl;

import com.study.shiro.domain.RoleDto;
import com.study.shiro.domain.RoleSearch;
import com.study.shiro.entity.Role;
import com.study.shiro.entity.RoleExample;
import com.study.shiro.service.RoleService;
import com.study.shiro.dao.RoleDao;
import org.springframework.stereotype.Service;
import javax.annotation.Resource;
import java.util.List;
import java.util.ArrayList;
import org.springframework.beans.BeanUtils;
/**
*  generated by AddClassPlugin plugin
*/

@Service
public class RoleServiceImpl implements RoleService {

    @Resource
    private RoleDao roleDao;

    @Override
    public void addRole(RoleDto roleDto) {
        Role role = dtoToEntity(roleDto);
        roleDao.insert(role);
    }

    @Override
    public void updateByRoleSearch(RoleDto roleDto, RoleSearch roleSearch) {

    }

    @Override
    public RoleDto findById(Integer id) {
        Role role = roleDao.selectByPrimaryKey(id);
        return role == null ? null : entityToDto(role);
    }

    @Override
    public List<RoleDto> searchByRoleSearch(RoleSearch roleSearch) {
        List<RoleDto> roleDtos = new ArrayList<>();
        if(roleSearch != null){
            RoleExample roleExample = getSearchExample(roleSearch);

            roleExample.setOrderByClause(roleSearch.getOrderByClause());
            List<Role> roles = roleDao.selectByExample(roleExample);
            roles.forEach(role -> roleDtos.add(entityToDto(role)));
        }
        return roleDtos;
    }

    @Override
    public Long count(RoleSearch roleSearch) {
        RoleExample roleExample = getSearchExample(roleSearch);
        return roleDao.countByExample(roleExample);
    }

    /**
    * 查询条件设置
    * @param roleSearch
    * @return
    */
    private RoleExample getSearchExample(RoleSearch roleSearch){
        RoleExample roleExample = new RoleExample();
        RoleExample.Criteria criteria = roleExample.createCriteria();
        if(roleSearch ==null){
            return roleExample;
        }
        if(roleSearch.getIds() != null &&!roleSearch.getIds().isEmpty()){
            criteria.andIdIn(roleSearch.getIds());
        }
        return roleExample;
    }


    /**
    * entity to dto
    * @param role
    * @return
    */
    private RoleDto entityToDto(Role role){
        RoleDto roleDto = new RoleDto();
        BeanUtils.copyProperties(role, roleDto);
        return roleDto;
    }

    /**
    * dto to entity
    * @param roleDto
    * @return
    */
    private Role dtoToEntity(RoleDto roleDto){
        Role role = new Role();
        BeanUtils.copyProperties(roleDto, role);
        return role;
    }

}
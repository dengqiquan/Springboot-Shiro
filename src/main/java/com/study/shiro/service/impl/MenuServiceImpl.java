package com.study.shiro.service.impl;

import com.study.shiro.domain.MenuDto;
import com.study.shiro.domain.MenuSearch;
import com.study.shiro.entity.Menu;
import com.study.shiro.entity.MenuExample;
import com.study.shiro.service.MenuService;
import com.study.shiro.dao.MenuDao;
import org.springframework.stereotype.Service;
import javax.annotation.Resource;
import java.util.List;
import java.util.ArrayList;
import org.springframework.beans.BeanUtils;
/**
*  generated by AddClassPlugin plugin
*/

@Service
public class MenuServiceImpl implements MenuService {

    @Resource
    private MenuDao menuDao;

    @Override
    public void addMenu(MenuDto menuDto) {
        Menu menu = dtoToEntity(menuDto);
        menuDao.insert(menu);
    }

    @Override
    public void updateByMenuSearch(MenuDto menuDto, MenuSearch menuSearch) {

    }

    @Override
    public MenuDto findById(Integer id) {
        Menu menu = menuDao.selectByPrimaryKey(id);
        return menu == null ? null : entityToDto(menu);
    }

    @Override
    public List<MenuDto> searchByMenuSearch(MenuSearch menuSearch) {
        List<MenuDto> menuDtos = new ArrayList<>();
        if(menuSearch != null){
            MenuExample menuExample = getSearchExample(menuSearch);

            menuExample.setOrderByClause(menuSearch.getOrderByClause());
            List<Menu> menus = menuDao.selectByExample(menuExample);
            menus.forEach(menu -> menuDtos.add(entityToDto(menu)));
        }
        return menuDtos;
    }

    @Override
    public Long count(MenuSearch menuSearch) {
        MenuExample menuExample = getSearchExample(menuSearch);
        return menuDao.countByExample(menuExample);
    }

    /**
    * 查询条件设置
    * @param menuSearch
    * @return
    */
    private MenuExample getSearchExample(MenuSearch menuSearch){
        MenuExample menuExample = new MenuExample();
        MenuExample.Criteria criteria = menuExample.createCriteria();
        if(menuSearch ==null){
            return menuExample;
        }
        return menuExample;
    }


    /**
    * entity to dto
    * @param menu
    * @return
    */
    private MenuDto entityToDto(Menu menu){
        MenuDto menuDto = new MenuDto();
        BeanUtils.copyProperties(menu, menuDto);
        return menuDto;
    }

    /**
    * dto to entity
    * @param menuDto
    * @return
    */
    private Menu dtoToEntity(MenuDto menuDto){
        Menu menu = new Menu();
        BeanUtils.copyProperties(menuDto, menu);
        return menu;
    }

}